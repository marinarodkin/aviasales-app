{"version":3,"sources":["Components/Sidebar.js","Components/Flight.js","App.js","serviceWorker.js","index.js"],"names":["SideBar","react_default","a","createElement","className","type","id","onClick","this","props","currencyClick","checked","currencyData","rub","for","usd","eur","stopsClick","stopsData","allStops","noStops","oneStop","twoStop","threeStop","Component","Flight","price","_this","getWeekDay","date","year","substr","month","day","Date","getDay","getDateFormat","newMonth","getMonth","concat","src","alt","currency","Math","floor","departureTime","origin","originName","departureDate","stop","getStopsNumber","stops","arrivalTime","destination","destinationName","arrivalDate","App","state","dataTicket","tickets","e","newStops","target","Object","objectSpread","setState","newCurrency","curr","getTicketData","_this2","fetch","then","responce","json","resp","console","log","_this3","items","arr0","arr1","arr2","arr3","newArr","filter","item","toConsumableArray","stopsFilter","sort","b","Sidebar","map","index","Components_Flight","origin_name","destination_name","departure_date","departure_time","arrival_date","arrival_time","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2QA6CeA,mLAzCX,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,qBACfH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,iBAAhB,wCACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yBACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,QAAQC,GAAG,MAAMF,UAAY,uBAAwBG,QAAWC,KAAKC,MAAMC,cAAeC,QAAWH,KAAKC,MAAMG,aAAaC,MAC3IZ,EAAAC,EAAAC,cAAA,SAAOW,IAAM,MAAMV,UAAY,sDAA/B,OACAH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,QAAQC,GAAG,MAAMF,UAAY,uBAAuBG,QAAWC,KAAKC,MAAMC,cAAeC,QAAWH,KAAKC,MAAMG,aAAaG,MAC1Id,EAAAC,EAAAC,cAAA,SAAOW,IAAK,MAAMV,UAAY,sDAA9B,OACAH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,QAAQC,GAAG,MAAMF,UAAY,wBAAwBG,QAAWC,KAAKC,MAAMC,cAAeC,QAAWH,KAAKC,MAAMG,aAAaI,MAC3If,EAAAC,EAAAC,cAAA,SAAOW,IAAK,MAAMV,UAAY,sDAA9B,QAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAY,iBAAhB,uHACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,+BACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,WAAWC,GAAG,WAAWF,UAAY,6BAA6BG,QAAWC,KAAKC,MAAMQ,WAAYN,QAAWH,KAAKC,MAAMS,UAAUC,WAClJlB,EAAAC,EAAAC,cAAA,SAAOW,IAAM,WAAWV,UAAY,0BAApC,uBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,WAAWC,GAAG,UAAUF,UAAY,4BAA4BG,QAAWC,KAAKC,MAAMQ,WAAYN,QAAWH,KAAKC,MAAMS,UAAUE,UAChJnB,EAAAC,EAAAC,cAAA,SAAOW,IAAM,UAAUV,UAAY,0BAAnC,8EAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,WAAWC,GAAG,UAAUF,UAAY,4BAA4BG,QAAWC,KAAKC,MAAMQ,WAAYN,QAAWH,KAAKC,MAAMS,UAAUG,UAChJpB,EAAAC,EAAAC,cAAA,SAAOW,IAAM,UAAUV,UAAY,0BAAnC,6DAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,WAAWC,GAAG,UAAUF,UAAY,4BAA4BG,QAAWC,KAAKC,MAAMQ,WAAYN,QAAWH,KAAKC,MAAMS,UAAUI,UAChJrB,EAAAC,EAAAC,cAAA,SAAOW,IAAM,UAAUV,UAAY,0BAAnC,6DAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,SAAOE,KAAO,WAAWC,GAAG,YAAYF,UAAY,4BAA4BG,QAAWC,KAAKC,MAAMQ,WAAYN,QAAWH,KAAKC,MAAMS,UAAUK,YAClJtB,EAAAC,EAAAC,cAAA,SAAOW,IAAM,YAAYV,UAAY,0BAArC,uEAlCQoB,aCmFPC,mLAlFJ,IAoCiBC,EApCjBC,EAAAnB,KAiBDoB,EAAa,SAACC,GAClB,IAAMC,EAAO,KAAKD,EAAKE,OAAO,EAAE,GAC1BC,EAAQH,EAAKE,OAAO,EAAE,GACtBE,EAAMJ,EAAKE,OAAO,EAAE,GAG1B,MADgB,CAAE,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,gBADrC,IAAIG,KAAMJ,EAAME,EAAOC,GAEjBE,WAGnBC,EAAgB,SAACP,GACrB,IAAMC,EAAO,KAAKD,EAAKE,OAAO,EAAE,GAC1BC,EAAQH,EAAKE,OAAO,EAAE,GACtBE,EAAMJ,EAAKE,OAAO,EAAE,GAGpBM,EADY,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,2BAAQ,qBAAO,2BAAQ,qBAAO,qBAAO,sBADzF,IAAIH,KAAMJ,EAAME,EAAOC,GAELK,YACnC,SAAAC,OAAUN,EAAV,KAAAM,OAAiBF,EAAjB,KAAAE,OAA6BT,IAW/B,OACE7B,EAAAC,EAAAC,cAAA,OAAKC,UAAY,UACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACfH,EAAAC,EAAAC,cAAA,OAAKqC,IAAI,+DAA+DpC,UAAU,YAAYqC,IAAI,UAEpGxC,EAAAC,EAAAC,cAAA,UAAQE,KAAO,SAASD,UAAY,cAApC,sDAdkBsB,EAcyDlB,KAAKC,MAAMiB,MAX9D,QAAxBC,EAAKlB,MAAMiC,SAAqB,KAAAH,OAAYI,KAAKC,MAAMlB,EAF3C,IAEoB,KACR,QAAxBC,EAAKlB,MAAMiC,SAAqB,UAAAH,OAAYI,KAAKC,MAAMlB,EAF3C,IAEoB,KAC/B,GAAAa,OAAUb,EAAV,YASD,MAEFzB,EAAAC,EAAAC,cAAA,OAAKC,UAAY,qBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,oBACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,eAAeI,KAAKC,MAAMoC,eAC3C5C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,yBACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,kBAAkBI,KAAKC,MAAMqC,OAA9C,MACA7C,EAAAC,EAAAC,cAAA,QAAMC,UAAW,sBAAsBI,KAAKC,MAAMsC,aAEpD9C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,+CACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,qCAAqCgC,EAAc5B,KAAKC,MAAMuC,eAA/E,MACA/C,EAAAC,EAAAC,cAAA,QAAMC,UAAW,qCAAqCwB,EAAWpB,KAAKC,MAAMuC,kBAGhF/C,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gBA9DA,SAAC6C,GACtB,OAAQA,GACN,KAAK,EACH,MAAO,2DACT,KAAK,EACH,MAAO,2DACT,KAAK,EACH,MAAO,2DACT,KAAK,EACH,MAAO,4EACT,QACE,QAmDiCC,CAAe1C,KAAKC,MAAM0C,QAC3DlD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,kBACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,eAAeI,KAAKC,MAAM2C,aAC3CnD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,0BACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,sBAAsBI,KAAKC,MAAM4C,YAAlD,MACApD,EAAAC,EAAAC,cAAA,QAAMC,UAAW,2BAA2BI,KAAKC,MAAM6C,kBAEzDrD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,gDACfH,EAAAC,EAAAC,cAAA,QAAMC,UAAW,mCAAmCgC,EAAc5B,KAAKC,MAAM8C,aAA7E,MACAtD,EAAAC,EAAAC,cAAA,QAAMC,UAAW,mCAAmCwB,EAAWpB,KAAKC,MAAM8C,yBA1EnE/B,aCuJNgC,oNAlJbC,MAAQ,CACNC,WAAY,CAACC,QAAQ,IACrBR,MAAO,CAAC/B,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,WAAW,EACXJ,UAAU,GAClBuB,SAAU,MACV9B,aAAc,CAACC,KAAK,EACLE,KAAK,EACLC,KAAK,MAkBtBC,WAAa,SAAC2C,GACZ,IACIC,EAEJ,OAHgBD,EAAEE,OAAOxD,IAIvB,IAAK,WAEDuD,GADgC,IAA9BlC,EAAK8B,MAAMN,MAAMhC,SACX4C,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyBhC,UAAU,EAAMC,SAAS,EAAMC,SAAS,EAAMC,SAAS,EAAMC,WAAW,IAGjGwC,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyBhC,UAAU,EAAOC,SAAS,EAAMC,SAAS,EAAOC,SAAS,EAAOC,WAAW,IAE9G,MACF,IAAK,UACHsC,EAAQE,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyB/B,SAAUO,EAAK8B,MAAMN,MAAM/B,QAASD,UAAU,IAC/E,MACF,IAAK,UACH0C,EAAQE,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyB9B,SAAUM,EAAK8B,MAAMN,MAAM9B,QAASF,UAAU,IAC/E,MACF,IAAK,UACH0C,EAAQE,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyB7B,SAAUK,EAAK8B,MAAMN,MAAM7B,QAASH,UAAU,IAC/E,MACF,IAAK,YACH0C,EAAQE,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyB5B,WAAYI,EAAK8B,MAAMN,MAAM5B,UAAWJ,UAAU,KAMrD,IAA9BQ,EAAK8B,MAAMN,MAAMhC,WAAmD,IAA7BQ,EAAK8B,MAAMN,MAAM/B,UAAiD,IAA7BO,EAAK8B,MAAMN,MAAM9B,UAAiD,IAA7BM,EAAK8B,MAAMN,MAAM7B,UAAmD,IAA/BK,EAAK8B,MAAMN,MAAM5B,YACtKsC,EAAQE,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAMN,MAAlB,CAAyBhC,UAAU,KAGhDQ,EAAKsC,SAAU,CAACd,MAAOU,OAIzBnD,cAAgB,SAACkD,GACf,IACIM,EADEC,EAAOP,EAAEE,OAAOxD,GAItB,OAFAqB,EAAKsC,SAAS,CAACvB,SAAUyB,IAElBA,GACL,IAAK,MACHD,EAAWH,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAM7C,aAAlB,CAAgCC,KAAK,EAAOE,KAAK,EAAOC,KAAK,IACxE,MACF,IAAK,MACHkD,EAAWH,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAM7C,aAAlB,CAAgCC,KAAK,EAAOE,KAAK,EAAMC,KAAK,IACvE,MACF,QACEkD,EAAWH,OAAAC,EAAA,EAAAD,CAAA,GAAOpC,EAAK8B,MAAM7C,aAAlB,CAAgCC,KAAK,EAAME,KAAK,EAAOC,KAAK,IAI3EW,EAAKsC,SAAU,CAACrD,aAAcsD,wFApE9B1D,KAAK4D,cAAc,uDAGN,IAAAC,EAAA7D,KACb8D,MACQ,4DACFC,KAAK,SAAAC,GACX,OAAOA,EAASC,SACTF,KAAK,SAAAG,GACJC,QAAQC,IAAI,SAAUF,GACtBL,EAAKJ,SAAU,CAACP,WAAYgB,uCA6D7B,IAAAG,EAAArE,KAkCHsE,EAAQtE,KAAKiD,MAAMC,WAAWC,QAIlC,OAHAmB,EA5BoB,SAACA,GACnB,IAAIC,EAAM,GACNC,EAAM,GACNC,EAAM,GACNC,EAAM,GACNC,EAAS,GAEb,OAAkC,IAA9BN,EAAKpB,MAAMN,MAAMhC,SACZ2D,IAEwB,IAA7BD,EAAKpB,MAAMN,MAAM/B,UACnB2D,EAAOD,EAAMM,OAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKlC,UAEF,IAA7B0B,EAAKpB,MAAMN,MAAM9B,UACnB2D,EAAOF,EAAMM,OAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKlC,UAEF,IAA7B0B,EAAKpB,MAAMN,MAAM7B,UACnB2D,EAAOH,EAAMM,OAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKlC,UAEA,IAA/B0B,EAAKpB,MAAMN,MAAM5B,YACnB2D,EAAOJ,EAAMM,OAAO,SAAAC,GAAI,OAAmB,IAAfA,EAAKlC,SAGnCgC,EAAMpB,OAAAuB,EAAA,EAAAvB,CAAOoB,GAAP5C,OAAAwB,OAAAuB,EAAA,EAAAvB,CAAkBgB,GAAlBhB,OAAAuB,EAAA,EAAAvB,CAA2BiB,GAA3BjB,OAAAuB,EAAA,EAAAvB,CAAoCkB,GAApClB,OAAAuB,EAAA,EAAAvB,CAA6CmB,KAK7CK,CAAYT,IACdU,KAlCiB,SAACtF,EAAEuF,GACxB,OAAIvF,EAAEwB,MAAQ+D,EAAE/D,MAAc,EAC1BxB,EAAEwB,MAAQ+D,EAAE/D,OAAe,OAA/B,IAmCAzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAY,YACfH,EAAAC,EAAAC,cAAA,OAAKqC,IAAI,4DAA4DpC,UAAU,eAAeqC,IAAI,WAGtGxC,EAAAC,EAAAC,cAAA,OAAKC,UAAY,aACfH,EAAAC,EAAAC,cAACuF,EAAD,CAASzE,WAAcT,KAAKS,WAAYP,cAAiBF,KAAKE,cAAeE,aAAgBJ,KAAKiD,MAAM7C,aAAcM,UAAaV,KAAKiD,MAAMN,QAC9IlD,EAAAC,EAAAC,cAAA,OAAKC,UAAY,eACd0E,EAAMa,IAAI,SAACN,EAAMO,GAAP,OACV3F,EAAAC,EAAAC,cAAC0F,EAAD,CAAQ/C,OAAUuC,EAAKvC,OAAQC,WAAcsC,EAAKS,YAAazC,YAAegC,EAAKhC,YACpDC,gBAAmB+B,EAAKU,iBAAkB/C,cAAiBqC,EAAKW,eAAgBnD,cAAiBwC,EAAKY,eACtG1C,YAAe8B,EAAKa,aAAc9C,YAAeiC,EAAKc,aAAchD,MAASkC,EAAKlC,MAAOzB,MAAS2D,EAAK3D,MAAOgB,SAAYmC,EAAKpB,MAAMf,uBAzI/JlB,cCIE4E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCVNC,IAASC,OAAOzG,EAAAC,EAAAC,cAACwG,EAAD,MAASC,SAASC,eAAe,SDmH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMzC,KAAK,SAAA0C,GACjCA,EAAaC","file":"static/js/main.1ad1372e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass SideBar extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"sidebar\">\r\n        <div className = \"sidebar_btn-group\">\r\n          <h2 className = \"sidebar_title\">ВАЛЮТА</h2>\r\n          <div className = \"sidebar_currency-btns\">\r\n            <input type = \"radio\" id=\"rub\" className = \"sidebar_currency-btn\"  onClick = {this.props.currencyClick} checked = {this.props.currencyData.rub} />\r\n            <label for = \"rub\" className = \"sidebar_currency-label sidebar_currency-label--rub\" >RUB</label>\r\n            <input type = \"radio\" id=\"usd\" className = \"sidebar_currency-btn\" onClick = {this.props.currencyClick} checked = {this.props.currencyData.usd}  />\r\n            <label for =\"usd\" className = \"sidebar_currency-label sidebar_currency-label--usd\">USD</label>\r\n            <input type = \"radio\" id=\"eur\" className = \"sidebar_currency-btn \" onClick = {this.props.currencyClick} checked = {this.props.currencyData.eur} />\r\n            <label for =\"eur\" className = \"sidebar_currency-label sidebar_currency-label--eur\">EUR</label>\r\n          </div>\r\n          <h2 className = \"sidebar_title\">количество пересадок</h2>\r\n          <div className = \"sidebar_changing-checkboxes\">\r\n            <div className = \"sidebar_changing-block\">\r\n              <input type = \"checkbox\" id=\"allStops\" className = \"sidebar_changing-checkbox \" onClick = {this.props.stopsClick} checked = {this.props.stopsData.allStops} />\r\n              <label for = \"allStops\" className = \"sidebar_changing-label\">Все</label>\r\n            </div>\r\n            <div className = \"sidebar_changing-block\">\r\n              <input type = \"checkbox\" id=\"noStops\" className = \"sidebar_changing-checkbox\" onClick = {this.props.stopsClick} checked = {this.props.stopsData.noStops}  />\r\n              <label for = \"noStops\" className = \"sidebar_changing-label\">Без пересадок</label>\r\n            </div>\r\n            <div className = \"sidebar_changing-block\">\r\n              <input type = \"checkbox\" id=\"oneStop\" className = \"sidebar_changing-checkbox\" onClick = {this.props.stopsClick} checked = {this.props.stopsData.oneStop}/>\r\n              <label for = \"oneStop\" className = \"sidebar_changing-label\">1 пересадка</label>\r\n            </div>\r\n            <div className = \"sidebar_changing-block\">\r\n              <input type = \"checkbox\" id=\"twoStop\" className = \"sidebar_changing-checkbox\" onClick = {this.props.stopsClick} checked = {this.props.stopsData.twoStop} />\r\n              <label for = \"twoStop\" className = \"sidebar_changing-label\">2 пересадка</label>\r\n            </div>\r\n            <div className = \"sidebar_changing-block\">\r\n              <input type = \"checkbox\" id=\"threeStop\" className = \"sidebar_changing-checkbox\" onClick = {this.props.stopsClick} checked = {this.props.stopsData.threeStop} />\r\n              <label for = \"threeStop\" className = \"sidebar_changing-label\">3 пересадка</label>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SideBar\r\n","import React, { Component } from 'react';\r\n\r\nclass Flight extends Component {\r\n  render() {\r\n\r\n    const getStopsNumber = (stop) =>{\r\n      switch (stop) {\r\n        case 3:\r\n          return \"3 пересадки\"\r\n        case 2:\r\n          return \"2 пересадки\"\r\n        case 1:\r\n          return \"1 пересадка\"\r\n        case 0:\r\n          return \"без пересадок\"\r\n        default:\r\n          return\r\n      }\r\n    }\r\n\r\n    const getWeekDay = (date) => {\r\n      const year = \"20\"+date.substr(6,2);\r\n      const month = date.substr(3,2);\r\n      const day = date.substr(0,2);\r\n      const newDate  = new Date (year, month, day, )\r\n      const weekDay = [ \"вс\", \"пн\", \"вт\", \"ср\", \"чт\", \"пт\", \"сб\" ];\r\n      return weekDay[newDate.getDay()];\r\n    }\r\n\r\n    const getDateFormat = (date) =>{\r\n      const year = \"20\"+date.substr(6,2);\r\n      const month = date.substr(3,2);\r\n      const day = date.substr(0,2);\r\n      const newDate  = new Date (year, month, day, );\r\n      const monthName = [\"дек\", \"янв\", \"фев\", \"мар\", \"апр\", \"мая\", \"июня\", \"июля\", \"авг\", \"сент\", \"окт\", \"ноя\", \"дек\"];\r\n      const newMonth = monthName[newDate.getMonth()];\r\n      return `${day} ${newMonth} ${year}`\r\n    }\r\n\r\n    const changeCurrency = (price) => {\r\n      const usdRate = 68; // must be changed\r\n      const eurRate = 77; // must be changed\r\n      if (this.props.currency === \"usd\" ) return `$ ${Math.floor(price/usdRate)} `;\r\n      if (this.props.currency === \"eur\" ) return `€ ${Math.floor(price/eurRate)} `;\r\n      else return `${price} ₽`\r\n    }\r\n\r\n    return (\r\n      <div className = \"flight\">\r\n        <div className = \"flight_left-side\">\r\n          <div className = \"flight_avia-logo\">\r\n            <img src=\"https://marinarodkin.github.io/aviasales-app/img/turkish.png\" className=\"avia-logo\" alt=\"logo\" />\r\n          </div>\r\n          <button type = \"submit\" className = \"flight-btn\">Купить за {changeCurrency(this.props.price)} </button>\r\n        </div>\r\n        <div className = \"flight_right-side\">\r\n          <div className = \"flight_departure\">\r\n            <span className =\"flight_time\">{this.props.departureTime}</span>\r\n            <div className = \"flight_aeroport-block\">\r\n              <span className =\"flight_origin \">{this.props.origin}, </span>\r\n              <span className =\"flight_origin-name\">{this.props.originName}</span>\r\n            </div>\r\n            <div className = \"flight_data-block flight_data-block--origin\">\r\n              <span className =\"flight_departure-date flight_date\">{getDateFormat(this.props.departureDate)}, </span>\r\n              <span className =\"flight_departure-date flight_date\">{getWeekDay(this.props.departureDate)}</span>\r\n            </div>\r\n          </div>\r\n          <div className = \"flight_stops\">{getStopsNumber(this.props.stops)}</div>\r\n          <div className = \"flight_arrival\">\r\n            <span className =\"flight_time\">{this.props.arrivalTime}</span>\r\n            <div className = \"flight_aeroport-block \">\r\n              <span className =\"flight_destination\">{this.props.destination}, </span>\r\n              <span className =\"flight_destination-name\">{this.props.destinationName}</span>\r\n            </div>\r\n            <div className = \"flight_data-block flight_data-block--arrival\">\r\n              <span className =\"flight_arrival-date flight_date\">{getDateFormat(this.props.arrivalDate)}, </span>\r\n              <span className =\"flight_arrival-date flight_date\">{getWeekDay(this.props.arrivalDate)}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n    }\r\n    }\r\n\r\nexport default Flight;\r\n","import React, { Component } from 'react';\nimport SideBar  from \"./Components/Sidebar\";\nimport Flight  from \"./Components/Flight\";\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    dataTicket: {tickets:[]},\n    stops: {noStops: true,\n            oneStop: false,\n            twoStop: false,\n            threeStop: false,\n            allStops: false},\n    currency: \"rub\",\n    currencyData: {rub: true,\n                   usd: false,\n                   eur: false }\n  };\n\n  componentDidMount() {\n    this.getTicketData(\"ticket.json\");\n      }\n\n  getTicketData(){\n    fetch(\n            'https://marinarodkin.github.io/aviasales-app/ticket.json',\n        ).then(responce => {\n    return responce.json();\n        }).then(resp => {\n            console.log('resp: ', resp);\n            this.setState ({dataTicket: resp})\n        });\n     }\n\n  stopsClick = (e) => {\n    const theStop = e.target.id;\n    let newStops;\n\n    switch (theStop) {\n      case 'allStops':\n        if (this.state.stops.allStops === false){\n          newStops = {...this.state.stops, allStops: true, noStops: true, oneStop: true, twoStop: true, threeStop: true}\n        }\n        else{\n          newStops = {...this.state.stops, allStops: false, noStops: true, oneStop: false, twoStop: false, threeStop: false}\n        }\n        break\n      case 'noStops':\n        newStops = {...this.state.stops, noStops: !this.state.stops.noStops, allStops: false}\n        break\n      case 'oneStop':\n        newStops = {...this.state.stops, oneStop: !this.state.stops.oneStop, allStops: false}\n        break\n      case 'twoStop':\n        newStops = {...this.state.stops, twoStop: !this.state.stops.twoStop, allStops: false}\n        break\n      case 'threeStop':\n        newStops = {...this.state.stops, threeStop: !this.state.stops.threeStop, allStops: false}\n        break\n      default:\n        break\n      }\n\n    if( this.state.stops.allStops === false && this.state.stops.noStops === true && this.state.stops.oneStop === true && this.state.stops.twoStop === true && this.state.stops.threeStop === true  ){\n         newStops = {...this.state.stops, allStops: true}\n    }\n\n    this.setState ({stops: newStops})\n    }\n\n\n  currencyClick = (e) => {\n    const curr = e.target.id;\n    let newCurrency;\n    this.setState({currency: curr });\n\n    switch(curr){\n      case \"eur\":\n        newCurrency = {...this.state.currencyData, rub: false, usd: false, eur: true };\n        break\n      case \"usd\":\n        newCurrency = {...this.state.currencyData, rub: false, usd: true, eur: false };\n        break\n      default:\n        newCurrency = {...this.state.currencyData, rub: true, usd: false, eur: false };\n        break\n      }\n\n    this.setState ({currencyData: newCurrency})\n    }\n\n  render() {\n\n    const compareByPrice = (a,b) =>{\n      if (a.price > b.price) return 1;\n      if (a.price < b.price) return -1;\n      }\n\n    const stopsFilter = (items) => {\n      let arr0 =[];\n      let arr1 =[];\n      let arr2 =[];\n      let arr3 =[];\n      let newArr = []\n\n      if (this.state.stops.allStops === true){\n        return items;\n      }\n      if (this.state.stops.noStops === true){\n        arr0 = items.filter(item => item.stops === 0);\n      }\n      if (this.state.stops.oneStop === true){\n        arr1 = items.filter(item => item.stops === 1);\n      }\n      if (this.state.stops.twoStop === true){\n        arr2 = items.filter(item => item.stops === 2);\n      }\n      if (this.state.stops.threeStop === true){\n        arr3 = items.filter(item => item.stops === 3);\n      }\n\n      newArr = [...newArr, ...arr0, ...arr1, ...arr2, ...arr3];\n      return newArr;\n    }\n\n    let items = this.state.dataTicket.tickets; //data from state which come fron json\n    items = stopsFilter(items);  // data filterd by sorts\n    items.sort(compareByPrice);\n\n    return (\n      <div className=\"app\">\n        <header className=\"app-header\">\n          <div className = \"app-logo\">\n            <img src=\"https://marinarodkin.github.io/aviasales-app/img/logo.png\" className=\"app-logo-img\" alt=\"logo\" />\n          </div>\n        </header>\n        <div className = \"container\">\n          <SideBar stopsClick = {this.stopsClick} currencyClick = {this.currencyClick} currencyData = {this.state.currencyData} stopsData = {this.state.stops}/>\n          <div className = \"ticket-list\">\n            {items.map((item, index) =>\n             <Flight origin = {item.origin} originName = {item.origin_name} destination = {item.destination}\n                                            destinationName = {item.destination_name} departureDate = {item.departure_date} departureTime = {item.departure_time}\n                                            arrivalDate = {item.arrival_date} arrivalTime = {item.arrival_time} stops = {item.stops} price = {item.price} currency = {this.state.currency}/>)\n                                          }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n/*\nclass SideBar extends Component {\n  render() {\n    return (\n      <div className=\"sidebar\">\n        <div className = \"sidebar_btn-group\">\n          <h2 className = \"sidebar_title\">ВАЛЮТА</h2>\n          <div className = \"sidebar_currency-btns\">\n            <input type = \"radio\" id=\"rub\" className = \"sidebar_currency-btn\"  onClick = {this.props.currencyClick} checked = {this.props.currencyData.rub} />\n\n            <label for = \"rub\" className = \"sidebar_currency-label sidebar_currency-label--rub\" >RUB</label>\n            <input type = \"radio\" id=\"usd\" className = \"sidebar_currency-btn\" onClick = {this.props.currencyClick} checked = {this.props.currencyData.usd}  />\n            <label for =\"usd\" className = \"sidebar_currency-label sidebar_currency-label--usd\">USD</label>\n            <input type = \"radio\" id=\"eur\" className = \"sidebar_currency-btn \" onClick = {this.props.currencyClick} checked = {this.props.currencyData.eur} />\n            <label for =\"eur\" className = \"sidebar_currency-label sidebar_currency-label--eur\">EUR</label>\n\n          </div>\n          <h2 className = \"sidebar_title\">количество пересадок</h2>\n          <div className = \"sidebar_changing-checkboxes\">\n            <div className = \"sidebar_changing-block\">\n              <input type = \"checkbox\" id=\"allStops\" className = \"sidebar_changing-checkbox \" onClick = {this.props.onClick} checked = {this.props.checkData.allStops} />\n              <label for = \"allStops\" className = \"sidebar_changing-label\">Все</label>\n              <div className = \"sidebar_changing-check sidebar_changing-check--active\"></div>\n            </div>\n            <div className = \"sidebar_changing-block\">\n              <input type = \"checkbox\" id=\"noStops\" className = \"sidebar_changing-checkbox\" onClick = {this.props.onClick} checked = {this.props.checkData.noStops}  />\n              <label for = \"noStops\" className = \"sidebar_changing-label\">Без пересадок</label>\n              <div className = \"sidebar_changing-check\"></div>\n            </div>\n            <div className = \"sidebar_changing-block\">\n              <input type = \"checkbox\" id=\"oneStop\" className = \"sidebar_changing-checkbox\" onClick = {this.props.onClick} checked = {this.props.checkData.oneStop}/>\n              <label for = \"oneStop\" className = \"sidebar_changing-label\">1 пересадка</label>\n              <div className = \"sidebar_changing-check\"></div>\n            </div>\n            <div className = \"sidebar_changing-block\">\n              <input type = \"checkbox\" id=\"twoStop\" className = \"sidebar_changing-checkbox\" onClick = {this.props.onClick} checked = {this.props.checkData.twoStop} />\n              <label for = \"twoStop\" className = \"sidebar_changing-label\">2 пересадка</label>\n              <div className = \"sidebar_changing-check\"></div>\n            </div>\n            <div className = \"sidebar_changing-block\">\n              <input type = \"checkbox\" id=\"threeStop\" className = \"sidebar_changing-checkbox\" onClick = {this.props.onClick} checked = {this.props.checkData.threeStop} />\n              <label for = \"threeStop\" className = \"sidebar_changing-label\">3 пересадка</label>\n              <div className = \"sidebar_changing-check\"></div>\n            </div>\n        </div>\n      </div>\n      </div>\n    )\n  }\n}\n\nclass Flight extends Component {\n\n  render() {\n    const departureWeekDay = \"Пт\";\n    const arrivalWeekDay = \"Пт\";\n    const stopPrint = (stop) =>{\n      switch (stop) {\n    case 3:\n    return \"3 пересадки\"\n  case 2:\n    return \"2 пересадки\"\n      case 1:\n    return \"1 пересадка\"\n      case 0:\n      return \"без пересадок\"\n      }\n}\nconst getWeekDay = (date) => {\n const year = \"20\"+date.substr(6,2);\n const month = date.substr(3,2);\n const day = date.substr(0,2);\n\n const newDate  = new Date (year, month, day, )\n\n const weekDay = [ \"вс\", \"пн\", \"вт\", \"ср\",\n            \"чт\", \"пт\", \"сб\" ];\n return weekDay[newDate.getDay()];\n   }\n\nconst newDateFormat = (date) =>{\n const year = \"20\"+date.substr(6,2);\nconst month = date.substr(3,2);\n const day = date.substr(0,2);\n\n const newDate  = new Date (year, month, day, );\n\n  const monthName = [\"дек\", \"янв\", \"фев\", \"мар\", \"апр\", \"мая\", \"июня\", \"июля\", \"авг\", \"сент\", \"окт\", \"ноя\", \"дек\"];\n  const newMonth = monthName[newDate.getMonth()];\n  return `${day} ${newMonth} ${year}`\n }\n\n const changeCurrency = (price) => {\n   const usdRate = 68;\n   const eurRate = 77;\n   if (this.props.currency === \"usd\" ) return `USD ${Math.floor(price/usdRate)} `;\n   if (this.props.currency === \"eur\" ) return `EUR ${Math.floor(price/eurRate)} `;\n   else return `${price} P`\n }\n\n    return (\n      <div className = \"flight\">\n        <div className = \"flight_left-side\">\n          <div className = \"flight_avia-logo\">\n            <img src=\"img/turkish.png\" className=\"avia-logo\" alt=\"logo\" />\n          </div>\n          <button type = \"submit\" className = \"flight-btn\">Купить  за {changeCurrency(this.props.price)} </button>\n        </div>\n        <div className = \"flight_right-side\">\n          <div className = \"flight_departure\">\n            <span className =\"flight_departure-time flight_time\">{this.props.departureTime}</span>\n            <div className = \"flight_aeroport-block flight_aeroport-block--origin\">\n              <span className =\"flight_origin flight_aeroport\">{this.props.origin}, </span>\n              <span className =\"flight_origin-name flight_aeroport-name\">{this.props.originName}</span>\n            </div>\n            <div className = \"flight_data-block flight_data-block--origin\">\n              <span className =\"flight_departure-date flight_date\">{newDateFormat(this.props.departureDate)}, </span>\n              <span className =\"flight_departure-date flight_date\">{getWeekDay(this.props.departureDate)}</span>\n            </div>\n          </div>\n          <div className = \"flight_stops\">{stopPrint(this.props.stops)}</div>\n          <div className = \"flight_plane-img\"></div>\n          <div className = \"flight_arrival\">\n            <span className =\"flight_arrival-time flight_time\">{this.props.arrivalTime}</span>\n            <div className = \"flight_aeroport-block flight_aeroport-block--destination\">\n              <span className =\"flight_destination flight_aeroport\">{this.props.destination}, </span>\n              <span className =\"flight_destination-name flight_aeroport-name\">{this.props.destinationName}</span>\n            </div>\n            <div className = \"flight_data-block flight_data-block--arrival\">\n              <span className =\"flight_arrival-date flight_date\">{newDateFormat(this.props.arrivalDate)}, </span>\n              <span className =\"flight_arrival-date flight_date\">{getWeekDay(this.props.arrivalDate)}</span>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    )\n    }\n    }\n*/\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}